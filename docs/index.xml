<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memo</title>
    <link>https://sn2562.github.io/blog/</link>
    <description>Recent content on Memo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>UTF-8</language>
    <lastBuildDate>Sat, 24 Jun 2017 19:50:38 +0900</lastBuildDate>
    
	<atom:link href="https://sn2562.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>hugoに数式を導入する</title>
      <link>https://sn2562.github.io/blog/post/20170624_hugo/</link>
      <pubDate>Sat, 24 Jun 2017 19:50:38 +0900</pubDate>
      
      <guid>https://sn2562.github.io/blog/post/20170624_hugo/</guid>
      <description>HUGO MathJax 公式の導入ドキュメント。 日本語で書いてくれている人もいた。MathJax の導入 ここの通りにやればできる。  MathJaxってなーに HTMLやMarkdownのソースにLaTeX形式の構文で数式が書けるようにするJavaScriptライブラリ。
MathJaxの導入 HUGO上でこのライブラリを読み込んで動かすのはすごく簡単。ページにMathJaxライブラリを読みこむ設定をする。themesフォルダにあるテンプレート下のlayouts/partials/footer.htmlに以下を追記する。
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt; &amp;lt;/script&amp;gt;  ちなみにMathJaxの公式はここ。2017/4/25でCDNのホスティングサイト閉じてしまっているらしかった。記事の中ほどで現在は https://cdn.rawgit.com/mathjax/MathJax/2.7.1/MathJax.js で公開中と紹介されていた。
ヒント Markdownと記法が競合するので、ここまでの設定では必ず数式を書く時は\でエスケープしなければいけない。長い数式を書く時には\がいっぱいになっちゃって大変。 あとはインラインにしたい時&amp;lt;div&amp;gt;で囲う話しとか。そのへんのヒントが公式サイトにまとめられている。
layouts/partials/footer.html
&amp;lt;!-- MathJax --&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&amp;quot;\\(&amp;quot;,&amp;quot;\\)&amp;quot;]] } }); &amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\[&#39;,&#39;\]&#39;]], processEscapes: true, processEnvironments: true, skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;], TeX: { equationNumbers: { autoNumber: &amp;quot;AMS&amp;quot; }, extensions: [&amp;quot;AMSmath.</description>
    </item>
    
    <item>
      <title>ドットインストール-PHP入門 メモ</title>
      <link>https://sn2562.github.io/blog/post/20170618_php/</link>
      <pubDate>Sun, 18 Jun 2017 19:45:21 +0900</pubDate>
      
      <guid>https://sn2562.github.io/blog/post/20170618_php/</guid>
      <description>ドットインストール / PHP入門をお勉強したのでメモ。
01 PHPを使ってみよう PHPバージョンの確認
$ php -v  PHP 5.6.30 (cli) (built: Mar 11 2017 09:56:18) Copyright (c) 1997-2016 The PHP Group Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies with Xdebug v2.5.4, Copyright (c) 2002-2017, by Derick Rethans  02 はじめてのPHPプログラム 開始タグと終了タグ1 &amp;lt;?php ?&amp;gt;  コメント //コメント /* コメント コメント コメント */  03 ビルトインWebサーバーを使ってみよう phpファイルを見るにはビルドインサーバが必要．phpが用意してくれている簡易サーバを使ってビルドする．
自分のipアドレスを確認する $ ifconfig  ビルドインサーバを立ち上げる $ php -S 192.168.33.100:8000  PHP 5.</description>
    </item>
    
    <item>
      <title>GitHub Pages &#43; Hugoで日記を公開する</title>
      <link>https://sn2562.github.io/blog/post/20170618_gh/</link>
      <pubDate>Sun, 18 Jun 2017 17:19:15 +0900</pubDate>
      
      <guid>https://sn2562.github.io/blog/post/20170618_gh/</guid>
      <description>GitHubでブログを公開している人たちがいてカッコイイ！と思ったのでやってみる．
使用技術  Hugo  Hugo ブログとかポートフォリオみたいなサイトを作るサイトジェネレータ．Go製． .mdとか書いたらいい感じにサイトっぽくしたヤツをつくってくれる.  GitHub Pages  GitHub Pages githubのリポジトリ下にhtmlファイルとかおいて公開できる．   Hugoを使ってみる 基本的にはHugo Quickstart Guideを見ながら進めれば大丈夫．不安になったらhugo + Github Pagesでブログ作成に挑戦した話やHugoとGitHub Pagesで静的サイトを公開するが丁寧に教えてくれているので参考にする．だいたいは新しいページを作ってローカル環境で確認後Github Pagesで公開するって流れだった．
Quickstart Guideのメモ Step 3. 記事の追加 記事コンテンツを新しく追加したいときはhugo newコマンドを使う.
$ hugo new post/poyo.md  これでcontent/post下にpoyo.mdが生成されるので書き換えて記事をつくる．
+++ date = &amp;quot;2017-06-18T16:11:58+05:30&amp;quot; draft = true title = &amp;quot;poyo&amp;quot; +++ 記事の内容.  +++で囲まれた所をfront matterっていって記事の設定とかができるらしい．記事内容はその下に書いていく．
 date 日付 draft 記事の下書き設定．デフォルトはtrue． title 記事の表示タイトル image 記事のキャッチとして画像urlを文字列で設定できる．画像の置場所はstatic/images下．  Step 4. hugo起動 - Step 5.</description>
    </item>
    
  </channel>
</rss>